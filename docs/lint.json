[
  {
    "name": "DataGridComponent#checkValidity",
    "filePath": "src/components/datagrid/DataGrid.js",
    "lines": [
      {
        "lineNumber": 404,
        "line": "  /**\r"
      },
      {
        "lineNumber": 405,
        "line": "   * Checks the validity of this datagrid.\r"
      },
      {
        "lineNumber": 406,
        "line": "   *\r"
      },
      {
        "lineNumber": 407,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 408,
        "line": "   * @param dirty\r"
      },
      {
        "lineNumber": 409,
        "line": "   * @return {*}\r"
      },
      {
        "lineNumber": 410,
        "line": "   */\r"
      },
      {
        "lineNumber": 411,
        "line": "  checkValidity(data, dirty, row) {\r"
      }
    ],
    "codeParams": [
      "data",
      "dirty",
      "row"
    ],
    "docParams": [
      "data",
      "dirty"
    ]
  },
  {
    "name": "DataGridComponent#checkData",
    "filePath": "src/components/datagrid/DataGrid.js",
    "lines": [
      {
        "lineNumber": 427,
        "line": "  /**\r"
      },
      {
        "lineNumber": 428,
        "line": "   * Checks the data within each cell of the datagrid.\r"
      },
      {
        "lineNumber": 429,
        "line": "   *\r"
      },
      {
        "lineNumber": 430,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 431,
        "line": "   * @param flags\r"
      },
      {
        "lineNumber": 432,
        "line": "   * @return {*}\r"
      },
      {
        "lineNumber": 433,
        "line": "   */\r"
      },
      {
        "lineNumber": 434,
        "line": "  checkData(data, flags, row) {\r"
      }
    ],
    "codeParams": [
      "data",
      "flags",
      "row"
    ],
    "docParams": [
      "data",
      "flags"
    ]
  },
  {
    "name": "DataGridComponent#checkRows",
    "filePath": "src/components/datagrid/DataGrid.js",
    "lines": [
      {
        "lineNumber": 441,
        "line": "  /**\r"
      },
      {
        "lineNumber": 442,
        "line": "   * Checks all rows within the datagrid.\r"
      },
      {
        "lineNumber": 443,
        "line": "   *\r"
      },
      {
        "lineNumber": 444,
        "line": "   * @param method\r"
      },
      {
        "lineNumber": 445,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 446,
        "line": "   * @param opts\r"
      },
      {
        "lineNumber": 447,
        "line": "   * @return {*|boolean}\r"
      },
      {
        "lineNumber": 448,
        "line": "   */\r"
      },
      {
        "lineNumber": 449,
        "line": "  checkRows(method, data, opts, rowData) {\r"
      }
    ],
    "codeParams": [
      "method",
      "data",
      "opts",
      "rowData"
    ],
    "docParams": [
      "method",
      "data",
      "opts"
    ]
  },
  {
    "name": "DataGridComponent#checkRow",
    "filePath": "src/components/datagrid/DataGrid.js",
    "lines": [
      {
        "lineNumber": 456,
        "line": "  /**\r"
      },
      {
        "lineNumber": 457,
        "line": "   * Checks validity of each row according to a specific method.\r"
      },
      {
        "lineNumber": 458,
        "line": "   *\r"
      },
      {
        "lineNumber": 459,
        "line": "   * @param method\r"
      },
      {
        "lineNumber": 460,
        "line": "   * @param rowData\r"
      },
      {
        "lineNumber": 461,
        "line": "   * @param row\r"
      },
      {
        "lineNumber": 462,
        "line": "   * @param opts\r"
      },
      {
        "lineNumber": 463,
        "line": "   * @return {boolean}\r"
      },
      {
        "lineNumber": 464,
        "line": "   */\r"
      },
      {
        "lineNumber": 465,
        "line": "  checkRow(method, data, rowData, row, opts) {\r"
      }
    ],
    "codeParams": [
      "method",
      "data",
      "rowData",
      "row",
      "opts"
    ],
    "docParams": [
      "method",
      "rowData",
      "row",
      "opts"
    ]
  },
  {
    "name": "SelectComponent#addOption",
    "filePath": "src/components/select/Select.js",
    "lines": [
      {
        "lineNumber": 164,
        "line": "  /**\r"
      },
      {
        "lineNumber": 165,
        "line": "   * Adds an option to the select dropdown.\r"
      },
      {
        "lineNumber": 166,
        "line": "   *\r"
      },
      {
        "lineNumber": 167,
        "line": "   * @param value\r"
      },
      {
        "lineNumber": 168,
        "line": "   * @param label\r"
      },
      {
        "lineNumber": 169,
        "line": "   */\r"
      },
      {
        "lineNumber": 170,
        "line": "  addOption(value, label, attrs = {}, id) {\r"
      }
    ],
    "codeParams": [
      "value",
      "label",
      "attrs",
      "id"
    ],
    "docParams": [
      "value",
      "label"
    ]
  },
  {
    "name": "SelectComponent#addCurrentChoices",
    "filePath": "src/components/select/Select.js",
    "lines": [
      {
        "lineNumber": 946,
        "line": "  /**\r"
      },
      {
        "lineNumber": 947,
        "line": "   * @param {*} value\r"
      },
      {
        "lineNumber": 948,
        "line": "   * @param {Array} items\r"
      },
      {
        "lineNumber": 949,
        "line": "   */\r"
      },
      {
        "lineNumber": 950,
        "line": "  addCurrentChoices(values, items, keyValue) {\r"
      }
    ],
    "codeParams": [
      "values",
      "items",
      "keyValue"
    ],
    "docParams": [
      "value",
      "items"
    ]
  },
  {
    "name": "TextAreaComponent#updateEditorValue",
    "filePath": "src/components/textarea/TextArea.js",
    "lines": [
      {
        "lineNumber": 88,
        "line": "  /**\r"
      },
      {
        "lineNumber": 89,
        "line": "   * Updates the editor value.\r"
      },
      {
        "lineNumber": 90,
        "line": "   *\r"
      },
      {
        "lineNumber": 91,
        "line": "   * @param newValue\r"
      },
      {
        "lineNumber": 92,
        "line": "   */\r"
      },
      {
        "lineNumber": 93,
        "line": "  updateEditorValue(index, newValue) {\r"
      }
    ],
    "codeParams": [
      "index",
      "newValue"
    ],
    "docParams": [
      "newValue"
    ]
  },
  {
    "name": "Component#getModifiedSchema",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 567,
        "line": "  /**\r"
      },
      {
        "lineNumber": 568,
        "line": "   * Returns only the schema that is different from the default.\r"
      },
      {
        "lineNumber": 569,
        "line": "   *\r"
      },
      {
        "lineNumber": 570,
        "line": "   * @param schema\r"
      },
      {
        "lineNumber": 571,
        "line": "   * @param defaultSchema\r"
      },
      {
        "lineNumber": 572,
        "line": "   */\r"
      },
      {
        "lineNumber": 573,
        "line": "  getModifiedSchema(schema, defaultSchema, recursion) {\r"
      }
    ],
    "codeParams": [
      "schema",
      "defaultSchema",
      "recursion"
    ],
    "docParams": [
      "schema",
      "defaultSchema"
    ]
  },
  {
    "name": "Component#sanitize",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 753,
        "line": "  /**\r"
      },
      {
        "lineNumber": 754,
        "line": "   * Sanitize an html string.\r"
      },
      {
        "lineNumber": 755,
        "line": "   *\r"
      },
      {
        "lineNumber": 756,
        "line": "   * @param string\r"
      },
      {
        "lineNumber": 757,
        "line": "   * @returns {*}\r"
      },
      {
        "lineNumber": 758,
        "line": "   */\r"
      },
      {
        "lineNumber": 759,
        "line": "  sanitize(dirty) {\r"
      }
    ],
    "codeParams": [
      "dirty"
    ],
    "docParams": [
      "string"
    ]
  },
  {
    "name": "Component#renderString",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 763,
        "line": "  /**\r"
      },
      {
        "lineNumber": 764,
        "line": "   * Render a template string into html.\r"
      },
      {
        "lineNumber": 765,
        "line": "   *\r"
      },
      {
        "lineNumber": 766,
        "line": "   * @param template\r"
      },
      {
        "lineNumber": 767,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 768,
        "line": "   * @param actions\r"
      },
      {
        "lineNumber": 769,
        "line": "   *\r"
      },
      {
        "lineNumber": 770,
        "line": "   * @return {HTMLElement} - The created element.\r"
      },
      {
        "lineNumber": 771,
        "line": "   */\r"
      },
      {
        "lineNumber": 772,
        "line": "  renderString(template, data) {\r"
      }
    ],
    "codeParams": [
      "template",
      "data"
    ],
    "docParams": [
      "template",
      "data",
      "actions"
    ]
  },
  {
    "name": "Component#conditionallyVisible",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 1392,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1393,
        "line": "   * Check if this component is conditionally visible.\r"
      },
      {
        "lineNumber": 1394,
        "line": "   *\r"
      },
      {
        "lineNumber": 1395,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 1396,
        "line": "   * @return {boolean}\r"
      },
      {
        "lineNumber": 1397,
        "line": "   */\r"
      },
      {
        "lineNumber": 1398,
        "line": "  conditionallyVisible(data, row) {\r"
      }
    ],
    "codeParams": [
      "data",
      "row"
    ],
    "docParams": [
      "data"
    ]
  },
  {
    "name": "Component#checkConditions",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 1449,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1450,
        "line": "   * Checks conditions for this component and any sub components.\r"
      },
      {
        "lineNumber": 1451,
        "line": "   * @param args\r"
      },
      {
        "lineNumber": 1452,
        "line": "   * @return {boolean}\r"
      },
      {
        "lineNumber": 1453,
        "line": "   */\r"
      },
      {
        "lineNumber": 1454,
        "line": "  checkConditions(data, flags, row) {\r"
      }
    ],
    "codeParams": [
      "data",
      "flags",
      "row"
    ],
    "docParams": [
      "args"
    ]
  },
  {
    "name": "Component#fieldLogic",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 1465,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1466,
        "line": "   * Check all triggers and apply necessary actions.\r"
      },
      {
        "lineNumber": 1467,
        "line": "   *\r"
      },
      {
        "lineNumber": 1468,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 1469,
        "line": "   */\r"
      },
      {
        "lineNumber": 1470,
        "line": "  fieldLogic(data, row) {\r"
      }
    ],
    "codeParams": [
      "data",
      "row"
    ],
    "docParams": [
      "data"
    ]
  },
  {
    "name": "Component#addMessages",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 1612,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1613,
        "line": "   * Add a new input error to this element.\r"
      },
      {
        "lineNumber": 1614,
        "line": "   *\r"
      },
      {
        "lineNumber": 1615,
        "line": "   * @param message\r"
      },
      {
        "lineNumber": 1616,
        "line": "   * @param dirty\r"
      },
      {
        "lineNumber": 1617,
        "line": "   */\r"
      },
      {
        "lineNumber": 1618,
        "line": "  addMessages(messages) {\r"
      }
    ],
    "codeParams": [
      "messages"
    ],
    "docParams": [
      "message",
      "dirty"
    ]
  },
  {
    "name": "Component#setValueAt",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 2070,
        "line": "  /**\r"
      },
      {
        "lineNumber": 2071,
        "line": "   * Set the value at a specific index.\r"
      },
      {
        "lineNumber": 2072,
        "line": "   *\r"
      },
      {
        "lineNumber": 2073,
        "line": "   * @param index\r"
      },
      {
        "lineNumber": 2074,
        "line": "   * @param value\r"
      },
      {
        "lineNumber": 2075,
        "line": "   */\r"
      },
      {
        "lineNumber": 2076,
        "line": "  setValueAt(index, value, flags) {\r"
      }
    ],
    "codeParams": [
      "index",
      "value",
      "flags"
    ],
    "docParams": [
      "index",
      "value"
    ]
  },
  {
    "name": "Component#updateComponentValue",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 2133,
        "line": "  /**\r"
      },
      {
        "lineNumber": 2134,
        "line": "   * Update a value of this component.\r"
      },
      {
        "lineNumber": 2135,
        "line": "   *\r"
      },
      {
        "lineNumber": 2136,
        "line": "   * @param flags\r"
      },
      {
        "lineNumber": 2137,
        "line": "   */\r"
      },
      {
        "lineNumber": 2138,
        "line": "  updateComponentValue(value, flags) {\r"
      }
    ],
    "codeParams": [
      "value",
      "flags"
    ],
    "docParams": [
      "flags"
    ]
  },
  {
    "name": "Component#calculateComponentValue",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 2212,
        "line": "  /**\r"
      },
      {
        "lineNumber": 2213,
        "line": "   * Perform a calculated value operation.\r"
      },
      {
        "lineNumber": 2214,
        "line": "   *\r"
      },
      {
        "lineNumber": 2215,
        "line": "   * @param data - The global data object.\r"
      },
      {
        "lineNumber": 2216,
        "line": "   *\r"
      },
      {
        "lineNumber": 2217,
        "line": "   * @return {boolean} - If the value changed during calculation.\r"
      },
      {
        "lineNumber": 2218,
        "line": "   */\r"
      },
      {
        "lineNumber": 2219,
        "line": "  calculateComponentValue(data, flags, row) {\r"
      }
    ],
    "codeParams": [
      "data",
      "flags",
      "row"
    ],
    "docParams": [
      "data"
    ]
  },
  {
    "name": "Component#calculateValue",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 2277,
        "line": "  /**\r"
      },
      {
        "lineNumber": 2278,
        "line": "   * Performs calculations in this component plus any child components.\r"
      },
      {
        "lineNumber": 2279,
        "line": "   *\r"
      },
      {
        "lineNumber": 2280,
        "line": "   * @param args\r"
      },
      {
        "lineNumber": 2281,
        "line": "   * @return {boolean}\r"
      },
      {
        "lineNumber": 2282,
        "line": "   */\r"
      },
      {
        "lineNumber": 2283,
        "line": "  calculateValue(data, flags, row) {\r"
      }
    ],
    "codeParams": [
      "data",
      "flags",
      "row"
    ],
    "docParams": [
      "args"
    ]
  },
  {
    "name": "Component#invalidMessage",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 2318,
        "line": "  /**\r"
      },
      {
        "lineNumber": 2319,
        "line": "   * Returns the invalid message, or empty string if the component is valid.\r"
      },
      {
        "lineNumber": 2320,
        "line": "   *\r"
      },
      {
        "lineNumber": 2321,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 2322,
        "line": "   * @param dirty\r"
      },
      {
        "lineNumber": 2323,
        "line": "   * @return {*}\r"
      },
      {
        "lineNumber": 2324,
        "line": "   */\r"
      },
      {
        "lineNumber": 2325,
        "line": "  invalidMessage(data, dirty, ignoreCondition, row) {\r"
      }
    ],
    "codeParams": [
      "data",
      "dirty",
      "ignoreCondition",
      "row"
    ],
    "docParams": [
      "data",
      "dirty"
    ]
  },
  {
    "name": "Component#checkData",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 2385,
        "line": "  /**\r"
      },
      {
        "lineNumber": 2386,
        "line": "   * Check the conditions, calculations, and validity of a single component and triggers an update if\r"
      },
      {
        "lineNumber": 2387,
        "line": "   * something changed.\r"
      },
      {
        "lineNumber": 2388,
        "line": "   *\r"
      },
      {
        "lineNumber": 2389,
        "line": "   * @param data - The root data of the change event.\r"
      },
      {
        "lineNumber": 2390,
        "line": "   * @param flags - The flags from this change event.\r"
      },
      {
        "lineNumber": 2391,
        "line": "   *\r"
      },
      {
        "lineNumber": 2392,
        "line": "   * @return boolean - If component is valid or not.\r"
      },
      {
        "lineNumber": 2393,
        "line": "   */\r"
      },
      {
        "lineNumber": 2394,
        "line": "  checkData(data, flags, row) {\r"
      }
    ],
    "codeParams": [
      "data",
      "flags",
      "row"
    ],
    "docParams": [
      "data",
      "flags"
    ]
  },
  {
    "name": "NestedComponent#getComponent",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 192,
        "line": "  /**\r"
      },
      {
        "lineNumber": 193,
        "line": "   * Returns a component provided a key. This performs a deep search within the\r"
      },
      {
        "lineNumber": 194,
        "line": "   * component tree.\r"
      },
      {
        "lineNumber": 195,
        "line": "   *\r"
      },
      {
        "lineNumber": 196,
        "line": "   * @param {string} key - The key of the component to retrieve.\r"
      },
      {
        "lineNumber": 197,
        "line": "   * @param {function} fn - Called with the component once found.\r"
      },
      {
        "lineNumber": 198,
        "line": "   * @return {Object} - The component that is located.\r"
      },
      {
        "lineNumber": 199,
        "line": "   */\r"
      },
      {
        "lineNumber": 200,
        "line": "  getComponent(path, fn) {\r"
      }
    ],
    "codeParams": [
      "path",
      "fn"
    ],
    "docParams": [
      "key",
      "fn"
    ]
  },
  {
    "name": "NestedComponent#createComponent",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 246,
        "line": "  /**\r"
      },
      {
        "lineNumber": 247,
        "line": "   * Create a new component and add it to the components array.\r"
      },
      {
        "lineNumber": 248,
        "line": "   *\r"
      },
      {
        "lineNumber": 249,
        "line": "   * @param component\r"
      },
      {
        "lineNumber": 250,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 251,
        "line": "   */\r"
      },
      {
        "lineNumber": 252,
        "line": "  createComponent(component, options, data, before) {\r"
      }
    ],
    "codeParams": [
      "component",
      "options",
      "data",
      "before"
    ],
    "docParams": [
      "component",
      "data"
    ]
  },
  {
    "name": "NestedComponent#addComponents",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 301,
        "line": "  /**\r"
      },
      {
        "lineNumber": 302,
        "line": "   *\r"
      },
      {
        "lineNumber": 303,
        "line": "   * @param element\r"
      },
      {
        "lineNumber": 304,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 305,
        "line": "   */\r"
      },
      {
        "lineNumber": 306,
        "line": "  addComponents(data, options) {\r"
      }
    ],
    "codeParams": [
      "data",
      "options"
    ],
    "docParams": [
      "element",
      "data"
    ]
  },
  {
    "name": "NestedComponent#addComponent",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 318,
        "line": "  /**\r"
      },
      {
        "lineNumber": 319,
        "line": "   * Add a new component to the components array.\r"
      },
      {
        "lineNumber": 320,
        "line": "   *\r"
      },
      {
        "lineNumber": 321,
        "line": "   * @param {Object} component - The component JSON schema to add.\r"
      },
      {
        "lineNumber": 322,
        "line": "   * @param {Object} data - The submission data object to house the data for this component.\r"
      },
      {
        "lineNumber": 323,
        "line": "   * @param {HTMLElement} before - A DOM element to insert this element before.\r"
      },
      {
        "lineNumber": 324,
        "line": "   * @return {Component} - The created component instance.\r"
      },
      {
        "lineNumber": 325,
        "line": "   */\r"
      },
      {
        "lineNumber": 326,
        "line": "  addComponent(component, data, before, noAdd) {\r"
      }
    ],
    "codeParams": [
      "component",
      "data",
      "before",
      "noAdd"
    ],
    "docParams": [
      "component",
      "data",
      "before"
    ]
  },
  {
    "name": "Form#sanitize",
    "filePath": "src/Form.js",
    "lines": [
      {
        "lineNumber": 214,
        "line": "  /**\r"
      },
      {
        "lineNumber": 215,
        "line": "   * Sanitize an html string.\r"
      },
      {
        "lineNumber": 216,
        "line": "   *\r"
      },
      {
        "lineNumber": 217,
        "line": "   * @param string\r"
      },
      {
        "lineNumber": 218,
        "line": "   * @returns {*}\r"
      },
      {
        "lineNumber": 219,
        "line": "   */\r"
      },
      {
        "lineNumber": 220,
        "line": "  sanitize(dirty) {\r"
      }
    ],
    "codeParams": [
      "dirty"
    ],
    "docParams": [
      "string"
    ]
  },
  {
    "name": "checkInvalidDate",
    "filePath": "src/utils/calendarUtils.js",
    "lines": [
      {
        "lineNumber": 71,
        "line": "/**\r"
      },
      {
        "lineNumber": 72,
        "line": " * Checks the entered date for validity.\r"
      },
      {
        "lineNumber": 73,
        "line": " *\r"
      },
      {
        "lineNumber": 74,
        "line": " * @param {String} value\r"
      },
      {
        "lineNumber": 75,
        "line": " *   The value to check.\r"
      },
      {
        "lineNumber": 76,
        "line": " * @param {[String]} format\r"
      },
      {
        "lineNumber": 77,
        "line": " *   A moment formats.\r"
      },
      {
        "lineNumber": 78,
        "line": " * @param {Date} maxDate\r"
      },
      {
        "lineNumber": 79,
        "line": " *   The max date.\r"
      },
      {
        "lineNumber": 80,
        "line": " * @param {Date} minDate\r"
      },
      {
        "lineNumber": 81,
        "line": " *   The min date.\r"
      },
      {
        "lineNumber": 82,
        "line": " * * @return {{message: string, result: boolean}}\r"
      },
      {
        "lineNumber": 83,
        "line": " */\r"
      },
      {
        "lineNumber": 84,
        "line": "export function checkInvalidDate(value, format, minDate, maxDate) {\r"
      }
    ],
    "codeParams": [
      "value",
      "format",
      "minDate",
      "maxDate"
    ],
    "docParams": [
      "value",
      "format",
      "maxDate",
      "minDate"
    ]
  },
  {
    "name": "getComponent",
    "filePath": "src/utils/formUtils.js",
    "lines": [
      {
        "lineNumber": 137,
        "line": "/**\r"
      },
      {
        "lineNumber": 138,
        "line": " * Get a component by its key\r"
      },
      {
        "lineNumber": 139,
        "line": " *\r"
      },
      {
        "lineNumber": 140,
        "line": " * @param {Object} components\r"
      },
      {
        "lineNumber": 141,
        "line": " *   The components to iterate.\r"
      },
      {
        "lineNumber": 142,
        "line": " * @param {String|Object} key\r"
      },
      {
        "lineNumber": 143,
        "line": " *   The key of the component to get, or a query of the component to search.\r"
      },
      {
        "lineNumber": 144,
        "line": " *\r"
      },
      {
        "lineNumber": 145,
        "line": " * @returns {Object}\r"
      },
      {
        "lineNumber": 146,
        "line": " *   The component that matches the given key, or undefined if not found.\r"
      },
      {
        "lineNumber": 147,
        "line": " */\r"
      },
      {
        "lineNumber": 148,
        "line": "export function getComponent(components, key, includeAll) {\r"
      }
    ],
    "codeParams": [
      "components",
      "key",
      "includeAll"
    ],
    "docParams": [
      "components",
      "key"
    ]
  },
  {
    "name": "findComponent",
    "filePath": "src/utils/formUtils.js",
    "lines": [
      {
        "lineNumber": 190,
        "line": "/**\r"
      },
      {
        "lineNumber": 191,
        "line": " * This function will find a component in a form and return the component AND THE PATH to the component in the form.\r"
      },
      {
        "lineNumber": 192,
        "line": " *\r"
      },
      {
        "lineNumber": 193,
        "line": " * @param components\r"
      },
      {
        "lineNumber": 194,
        "line": " * @param key\r"
      },
      {
        "lineNumber": 195,
        "line": " * @param fn\r"
      },
      {
        "lineNumber": 196,
        "line": " * @param path\r"
      },
      {
        "lineNumber": 197,
        "line": " * @returns {*}\r"
      },
      {
        "lineNumber": 198,
        "line": " */\r"
      },
      {
        "lineNumber": 199,
        "line": "export function findComponent(components, key, path, fn) {\r"
      }
    ],
    "codeParams": [
      "components",
      "key",
      "path",
      "fn"
    ],
    "docParams": [
      "components",
      "key",
      "fn",
      "path"
    ]
  },
  {
    "name": "evaluate",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 42,
        "line": "/**\r"
      },
      {
        "lineNumber": 43,
        "line": " * Evaluate a method.\r"
      },
      {
        "lineNumber": 44,
        "line": " *\r"
      },
      {
        "lineNumber": 45,
        "line": " * @param func\r"
      },
      {
        "lineNumber": 46,
        "line": " * @param args\r"
      },
      {
        "lineNumber": 47,
        "line": " * @return {*}\r"
      },
      {
        "lineNumber": 48,
        "line": " */\r"
      },
      {
        "lineNumber": 49,
        "line": "export function evaluate(func, args, ret, tokenize) {\r"
      }
    ],
    "codeParams": [
      "func",
      "args",
      "ret",
      "tokenize"
    ],
    "docParams": [
      "func",
      "args"
    ]
  },
  {
    "name": "checkCalculated",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 174,
        "line": "/**\r"
      },
      {
        "lineNumber": 175,
        "line": " * Checks the calculated value for a provided component and data.\r"
      },
      {
        "lineNumber": 176,
        "line": " *\r"
      },
      {
        "lineNumber": 177,
        "line": " * @param {Object} component\r"
      },
      {
        "lineNumber": 178,
        "line": " *   The component to check for the calculated value.\r"
      },
      {
        "lineNumber": 179,
        "line": " * @param {Object} submission\r"
      },
      {
        "lineNumber": 180,
        "line": " *   A submission object.\r"
      },
      {
        "lineNumber": 181,
        "line": " * @param data\r"
      },
      {
        "lineNumber": 182,
        "line": " *   The full submission data.\r"
      },
      {
        "lineNumber": 183,
        "line": " */\r"
      },
      {
        "lineNumber": 184,
        "line": "export function checkCalculated(component, submission, rowData) {\r"
      }
    ],
    "codeParams": [
      "component",
      "submission",
      "rowData"
    ],
    "docParams": [
      "component",
      "submission",
      "data"
    ]
  },
  {
    "name": "checkSimpleConditional",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 197,
        "line": "/**\r"
      },
      {
        "lineNumber": 198,
        "line": " * Check if a simple conditional evaluates to true.\r"
      },
      {
        "lineNumber": 199,
        "line": " *\r"
      },
      {
        "lineNumber": 200,
        "line": " * @param condition\r"
      },
      {
        "lineNumber": 201,
        "line": " * @param condition\r"
      },
      {
        "lineNumber": 202,
        "line": " * @param row\r"
      },
      {
        "lineNumber": 203,
        "line": " * @param data\r"
      },
      {
        "lineNumber": 204,
        "line": " * @returns {boolean}\r"
      },
      {
        "lineNumber": 205,
        "line": " */\r"
      },
      {
        "lineNumber": 206,
        "line": "export function checkSimpleConditional(component, condition, row, data) {\r"
      }
    ],
    "codeParams": [
      "component",
      "condition",
      "row",
      "data"
    ],
    "docParams": [
      "condition",
      "condition",
      "row",
      "data"
    ]
  },
  {
    "name": "checkCustomConditional",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 234,
        "line": "/**\r"
      },
      {
        "lineNumber": 235,
        "line": " * Check custom javascript conditional.\r"
      },
      {
        "lineNumber": 236,
        "line": " *\r"
      },
      {
        "lineNumber": 237,
        "line": " * @param component\r"
      },
      {
        "lineNumber": 238,
        "line": " * @param custom\r"
      },
      {
        "lineNumber": 239,
        "line": " * @param row\r"
      },
      {
        "lineNumber": 240,
        "line": " * @param data\r"
      },
      {
        "lineNumber": 241,
        "line": " * @returns {*}\r"
      },
      {
        "lineNumber": 242,
        "line": " */\r"
      },
      {
        "lineNumber": 243,
        "line": "export function checkCustomConditional(component, custom, row, data, form, variable, onError, instance) {\r"
      }
    ],
    "codeParams": [
      "component",
      "custom",
      "row",
      "data",
      "form",
      "variable",
      "onError",
      "instance"
    ],
    "docParams": [
      "component",
      "custom",
      "row",
      "data"
    ]
  },
  {
    "name": "checkCondition",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 271,
        "line": "/**\r"
      },
      {
        "lineNumber": 272,
        "line": " * Checks the conditions for a provided component and data.\r"
      },
      {
        "lineNumber": 273,
        "line": " *\r"
      },
      {
        "lineNumber": 274,
        "line": " * @param component\r"
      },
      {
        "lineNumber": 275,
        "line": " *   The component to check for the condition.\r"
      },
      {
        "lineNumber": 276,
        "line": " * @param row\r"
      },
      {
        "lineNumber": 277,
        "line": " *   The data within a row\r"
      },
      {
        "lineNumber": 278,
        "line": " * @param data\r"
      },
      {
        "lineNumber": 279,
        "line": " *   The full submission data.\r"
      },
      {
        "lineNumber": 280,
        "line": " *\r"
      },
      {
        "lineNumber": 281,
        "line": " * @returns {boolean}\r"
      },
      {
        "lineNumber": 282,
        "line": " */\r"
      },
      {
        "lineNumber": 283,
        "line": "export function checkCondition(component, row, data, form, instance) {\r"
      }
    ],
    "codeParams": [
      "component",
      "row",
      "data",
      "form",
      "instance"
    ],
    "docParams": [
      "component",
      "row",
      "data"
    ]
  },
  {
    "name": "checkTrigger",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 298,
        "line": "/**\r"
      },
      {
        "lineNumber": 299,
        "line": " * Test a trigger on a component.\r"
      },
      {
        "lineNumber": 300,
        "line": " *\r"
      },
      {
        "lineNumber": 301,
        "line": " * @param component\r"
      },
      {
        "lineNumber": 302,
        "line": " * @param action\r"
      },
      {
        "lineNumber": 303,
        "line": " * @param data\r"
      },
      {
        "lineNumber": 304,
        "line": " * @param row\r"
      },
      {
        "lineNumber": 305,
        "line": " * @returns {mixed}\r"
      },
      {
        "lineNumber": 306,
        "line": " */\r"
      },
      {
        "lineNumber": 307,
        "line": "export function checkTrigger(component, trigger, row, data, form, instance) {\r"
      }
    ],
    "codeParams": [
      "component",
      "trigger",
      "row",
      "data",
      "form",
      "instance"
    ],
    "docParams": [
      "component",
      "action",
      "data",
      "row"
    ]
  },
  {
    "name": "delay",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 873,
        "line": "/**\r"
      },
      {
        "lineNumber": 874,
        "line": " * Delays function execution with possibility to execute function synchronously or cancel it.\r"
      },
      {
        "lineNumber": 875,
        "line": " *\r"
      },
      {
        "lineNumber": 876,
        "line": " * @param fn Function to delay\r"
      },
      {
        "lineNumber": 877,
        "line": " * @param delay Delay time\r"
      },
      {
        "lineNumber": 878,
        "line": " * @return {*}\r"
      },
      {
        "lineNumber": 879,
        "line": " */\r"
      },
      {
        "lineNumber": 880,
        "line": "export function delay(fn, delay = 0, ...args) {\r"
      }
    ],
    "codeParams": [
      "fn",
      "delay",
      "args"
    ],
    "docParams": [
      "fn",
      "delay"
    ]
  },
  {
    "name": "unfold",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 947,
        "line": "/**\r"
      },
      {
        "lineNumber": 948,
        "line": " * Retrun provided argument.\r"
      },
      {
        "lineNumber": 949,
        "line": " * If argument is a function, returns the result of a function call.\r"
      },
      {
        "lineNumber": 950,
        "line": " * @param {*} e;\r"
      },
      {
        "lineNumber": 951,
        "line": " *\r"
      },
      {
        "lineNumber": 952,
        "line": " * @return {*}\r"
      },
      {
        "lineNumber": 953,
        "line": " */\r"
      },
      {
        "lineNumber": 954,
        "line": "export function unfold(e) {\r"
      }
    ],
    "codeParams": [
      "e"
    ],
    "docParams": [
      "e;"
    ]
  },
  {
    "name": "sanitize",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 1037,
        "line": "/**\r"
      },
      {
        "lineNumber": 1038,
        "line": " * Sanitize an html string.\r"
      },
      {
        "lineNumber": 1039,
        "line": " *\r"
      },
      {
        "lineNumber": 1040,
        "line": " * @param string\r"
      },
      {
        "lineNumber": 1041,
        "line": " * @returns {*}\r"
      },
      {
        "lineNumber": 1042,
        "line": " */\r"
      },
      {
        "lineNumber": 1043,
        "line": "export function sanitize(string, options) {\r"
      }
    ],
    "codeParams": [
      "string",
      "options"
    ],
    "docParams": [
      "string"
    ]
  },
  {
    "name": "Webform#restoreDraft",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 749,
        "line": "  /**\r"
      },
      {
        "lineNumber": 750,
        "line": "   * Restores a draft submission based on the user who is authenticated.\r"
      },
      {
        "lineNumber": 751,
        "line": "   *\r"
      },
      {
        "lineNumber": 752,
        "line": "   * @param {userId} - The user id where we need to restore the draft from.\r"
      },
      {
        "lineNumber": 753,
        "line": "   */\r"
      },
      {
        "lineNumber": 754,
        "line": "  restoreDraft(userId) {\r"
      }
    ],
    "codeParams": [
      "userId"
    ],
    "docParams": [
      "-"
    ]
  },
  {
    "name": "Webform#showErrors",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 1059,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1060,
        "line": "   * Show the errors of this form within the alert dialog.\r"
      },
      {
        "lineNumber": 1061,
        "line": "   *\r"
      },
      {
        "lineNumber": 1062,
        "line": "   * @param {Object} error - An optional additional error to display along with the component errors.\r"
      },
      {
        "lineNumber": 1063,
        "line": "   * @returns {*}\r"
      },
      {
        "lineNumber": 1064,
        "line": "   */\r"
      },
      {
        "lineNumber": 1065,
        "line": "  showErrors(error, triggerEvent) {\r"
      }
    ],
    "codeParams": [
      "error",
      "triggerEvent"
    ],
    "docParams": [
      "error"
    ]
  },
  {
    "name": "Webform#onChange",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 1205,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1206,
        "line": "   * Trigger the change event for this form.\r"
      },
      {
        "lineNumber": 1207,
        "line": "   *\r"
      },
      {
        "lineNumber": 1208,
        "line": "   * @param changed\r"
      },
      {
        "lineNumber": 1209,
        "line": "   * @param flags\r"
      },
      {
        "lineNumber": 1210,
        "line": "   */\r"
      },
      {
        "lineNumber": 1211,
        "line": "  onChange(flags, changed, modified) {\r"
      }
    ],
    "codeParams": [
      "flags",
      "changed",
      "modified"
    ],
    "docParams": [
      "changed",
      "flags"
    ]
  },
  {
    "name": "Webform#submit",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 1389,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1390,
        "line": "   * Submits the form.\r"
      },
      {
        "lineNumber": 1391,
        "line": "   *\r"
      },
      {
        "lineNumber": 1392,
        "line": "   * @example\r"
      },
      {
        "lineNumber": 1393,
        "line": "   * import Webform from 'formiojs/Webform';\r"
      },
      {
        "lineNumber": 1394,
        "line": "   * let form = new Webform(document.getElementById('formio'));\r"
      },
      {
        "lineNumber": 1395,
        "line": "   * form.src = 'https://examples.form.io/example';\r"
      },
      {
        "lineNumber": 1396,
        "line": "   * form.submission = {data: {\r"
      },
      {
        "lineNumber": 1397,
        "line": "   *   firstName: 'Joe',\r"
      },
      {
        "lineNumber": 1398,
        "line": "   *   lastName: 'Smith',\r"
      },
      {
        "lineNumber": 1399,
        "line": "   *   email: 'joe@example.com'\r"
      },
      {
        "lineNumber": 1400,
        "line": "   * }};\r"
      },
      {
        "lineNumber": 1401,
        "line": "   * form.submit().then((submission) => {\r"
      },
      {
        "lineNumber": 1402,
        "line": "   *   console.log(submission);\r"
      },
      {
        "lineNumber": 1403,
        "line": "   * });\r"
      },
      {
        "lineNumber": 1404,
        "line": "   *\r"
      },
      {
        "lineNumber": 1405,
        "line": "   * @param {boolean} before - If this submission occured from the before handlers.\r"
      },
      {
        "lineNumber": 1406,
        "line": "   *\r"
      },
      {
        "lineNumber": 1407,
        "line": "   * @returns {Promise} - A promise when the form is done submitting.\r"
      },
      {
        "lineNumber": 1408,
        "line": "   */\r"
      },
      {
        "lineNumber": 1409,
        "line": "  submit(before, options) {\r"
      }
    ],
    "codeParams": [
      "before",
      "options"
    ],
    "docParams": [
      "before"
    ]
  },
  {
    "name": "WebformBuilder#saveComponent",
    "filePath": "src/WebformBuilder.js",
    "lines": [
      {
        "lineNumber": 974,
        "line": "  /**\r"
      },
      {
        "lineNumber": 975,
        "line": "   * Called when a new component is saved.\r"
      },
      {
        "lineNumber": 976,
        "line": "   *\r"
      },
      {
        "lineNumber": 977,
        "line": "   * @param parent\r"
      },
      {
        "lineNumber": 978,
        "line": "   * @param component\r"
      },
      {
        "lineNumber": 979,
        "line": "   * @return {boolean}\r"
      },
      {
        "lineNumber": 980,
        "line": "   */\r"
      },
      {
        "lineNumber": 981,
        "line": "  saveComponent(component, parent, isNew, original) {\r"
      }
    ],
    "codeParams": [
      "component",
      "parent",
      "isNew",
      "original"
    ],
    "docParams": [
      "parent",
      "component"
    ]
  }
]